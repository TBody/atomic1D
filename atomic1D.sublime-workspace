{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"data",
				"datatype_abbrevs"
			],
			[
				"to",
				"tolist"
			],
			[
				"log",
				"log_density"
			],
			[
				"elem",
				"element"
			],
			[
				"eleme",
				"elements_years"
			],
			[
				"open",
				"open_adas_url"
			],
			[
				"__",
				"__name__"
			],
			[
				"in",
				"integer"
			],
			[
				"is",
				"isinstance"
			],
			[
				"sta",
				"staging_power"
			],
			[
				"rad",
				"rad_power"
			],
			[
				"cooling",
				"cooling_power"
			],
			[
				"keys",
				"keys_b"
			],
			[
				"assert_al",
				"assert_almost_equal"
			],
			[
				"as",
				"assert_\tfunction"
			],
			[
				"pas",
				"parser"
			],
			[
				"read",
				"readline"
			],
			[
				"test",
				"test_rates"
			],
			[
				"length",
				"length_of_data_section"
			],
			[
				"entr",
				"entries_per_line"
			],
			[
				"MET",
				"METF"
			],
			[
				"file",
				"file_header"
			],
			[
				"spece",
				"species\t(Power_scan_plot_neutrals.m)"
			],
			[
				"Comp",
				"Computational_line_width"
			],
			[
				"prod",
				"production_keys"
			],
			[
				"pro",
				"production_keys"
			],
			[
				"max",
				"max_Rate"
			],
			[
				"Production",
				"production_keys"
			],
			[
				"Max",
				"max_NH3"
			],
			[
				"Find",
				"Find_in_SI2E"
			],
			[
				"Com",
				"Computational_line_width\t(New_scans_plot_all.m)"
			],
			[
				"Line",
				"LineWidth\t(Process_new_graphs.m)"
			],
			[
				"Spec",
				"SpeciesKey"
			],
			[
				"xl",
				"xlabel_multiplier"
			],
			[
				"x",
				"xlabel_multiplier"
			],
			[
				"X",
				"xlabel"
			],
			[
				"Col",
				"ColumnWidthStyle"
			],
			[
				"Fu",
				"FullWidthStyle"
			],
			[
				"Co",
				"Column\t(New_scans_plot_surface.m)"
			],
			[
				"Exp",
				"ExportStyle"
			],
			[
				"ne",
				"neutral_handles"
			],
			[
				"srt",
				"sorted_expt"
			],
			[
				"sort",
				"sorted_expt"
			],
			[
				"store",
				"store_expt"
			],
			[
				"sorte",
				"sorted_expt"
			],
			[
				"sorted",
				"sorted_norm"
			],
			[
				"expt",
				"expt_sorting"
			],
			[
				"exp",
				"expt_sorting"
			],
			[
				"min",
				"min_difference"
			],
			[
				"comp",
				"comp_points"
			],
			[
				"yla",
				"ylabel"
			],
			[
				"neutra",
				"neutral_handles"
			],
			[
				"iter",
				"iter2"
			],
			[
				"MATLA",
				"MATLAB_colours"
			],
			[
				"com",
				"Computational_line_width"
			],
			[
				"Lne",
				"LineWidth"
			],
			[
				"MA",
				"MATLAB_colours"
			],
			[
				"Ne",
				"NeutralLegend"
			],
			[
				"pd",
				"pDkey"
			],
			[
				"norm",
				"normalisation"
			],
			[
				"max_",
				"Max_Expt"
			],
			[
				"pD",
				"pDkey"
			],
			[
				"Scan",
				"Scan_values"
			],
			[
				"fpr",
				"fprintf\t(Run_single_variable_scan.m)"
			],
			[
				"spc",
				"species_indices"
			],
			[
				"species_inde",
				"species_indices"
			],
			[
				"speci",
				"species_indices"
			],
			[
				"species",
				"species_index"
			],
			[
				"plot",
				"plot_species"
			],
			[
				"SCan",
				"Scan_parameter"
			],
			[
				"Conv",
				"Converged"
			],
			[
				"R_",
				"R_Converged"
			],
			[
				"So",
				"SortIndices"
			],
			[
				"Ene",
				"Energy"
			],
			[
				"Ind",
				"IndependentVariable"
			],
			[
				"Mark",
				"MarkerSize"
			],
			[
				"Len",
				"Legend"
			],
			[
				"else",
				"elseif\telseif"
			],
			[
				"els",
				"elseif\telseif"
			],
			[
				"Spe",
				"Species_I2E"
			],
			[
				"In",
				"IndependentVariable"
			],
			[
				"Inde",
				"IndependentVariable"
			],
			[
				"P",
				"PlotStruct"
			],
			[
				"Res",
				"Results"
			],
			[
				"Y",
				"Y_N"
			],
			[
				"Y_",
				"Y_N"
			],
			[
				"Tit",
				"TitleList"
			],
			[
				"Gas",
				"GasSupply"
			],
			[
				"Tot",
				"TotalFlow"
			],
			[
				"Ga",
				"GasSupply"
			],
			[
				"St",
				"StartingPressure"
			],
			[
				"Star",
				"StartingPressure\t(Results_Plot.m)"
			],
			[
				"Powe",
				"PowerAbsorbed\t(Results_Plot.m)"
			],
			[
				"Resu",
				"Results"
			],
			[
				"Results",
				"Results_Struct"
			],
			[
				"IVS",
				"IVSIndex"
			],
			[
				"Upda",
				"UpdateSpeciesConcentrations_ConvergenceCheck"
			],
			[
				"sp",
				"sprintf\t(Evaluation_SingleVariableScan.m)"
			],
			[
				"Initial",
				"InitialValuesStruct"
			],
			[
				"Test",
				"TestIndex"
			],
			[
				"Tes",
				"TestIndex"
			],
			[
				"S",
				"ShowPlotElement"
			],
			[
				"spr",
				"sprintf\t(SolveBalanceEquations.m)"
			],
			[
				"Dens",
				"Density"
			],
			[
				"React",
				"ReactionLength"
			],
			[
				"Reac",
				"ReactionLength"
			],
			[
				"Den",
				"DensityFactor"
			],
			[
				"Leng",
				"LegendList"
			],
			[
				"Rate",
				"RateCoeff"
			],
			[
				"Init",
				"InitialTeStruct"
			],
			[
				"InitialT",
				"InitialTeStruct"
			],
			[
				"Chec",
				"CheckIllegalSystemConditions"
			],
			[
				"Return",
				"Return_Display_dict"
			],
			[
				"Converg",
				"ConvergencePrecision"
			],
			[
				"Species",
				"Species_I2E"
			],
			[
				"Solve",
				"SolveBalanceEquations"
			],
			[
				"C",
				"Controller"
			],
			[
				"Con",
				"Controller"
			],
			[
				"Ionwal",
				"IonWallLossZeros"
			],
			[
				"Ion",
				"IonicMFP"
			],
			[
				"Conc",
				"Conc_Rates"
			],
			[
				"uB",
				"uBohmVector"
			],
			[
				"T",
				"Te_column"
			],
			[
				"Sp",
				"SpeciesInterdependency"
			],
			[
				"Speci",
				"Species_I2E"
			],
			[
				"Boo",
				"Boolean_eC"
			],
			[
				"Te",
				"Te_row"
			],
			[
				"e",
				"e_index\t(Precalculate_SystemStruct.m)"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "# Program name: atomic1D/build_json.py\n# Author: Thomas Body\n# Author email: tajb500@york.ac.uk\n# Date of creation: 12 July 2017\n\nimport json\n\ndef check_cwd():\n    print(\"Running \")\nif os.path.isdir('adas_data')\n    print('Found a ')\n\n\nos.listdir(os.getcwd()+\"/adas_data\"\n\n# Use fortran helper functions to read .dat file into ret.\n# Key to inputs (from xxdata_11.pdf)\n    # type  | name   | description\n    # (i*4) | iunit  | unit to which input file is allocated\n    # (i*4) | iclass | class of data (numerical code) - see table below\n    # ----------------------------------------------------------\n    # use defaults (set in parameters) for everything below this\n    # ----------------------------------------------------------\n    # (i*4) | isdimd | maximum number of (sstage, parent, base)\n    #       |        | blocks in isonuclear master files\n    # (i*4) | iddimd | maximum number of dens values in \n    #       |        | isonuclear master files\n    # (i*4) | itdimd | maximum number of temp values in \n    #       |        | isonuclear master files\n    # (i*4) | ndptnl | maximum level of partitions\n    # (i*4) | ndptn  | maximum no. of partitions in one level\n    # (i*4) | ndptnc | maximum no. of components in a partition\n    # (i*4) | ndcnct | maximum number of elements in connection vector\n\n# Supported adf11 data classes.  See src/xxdata_11/xxdata_11.for for all the\n# twelve classes.\nadf11_classes = {\n    'acd' : 1, # recombination coefficients\n    'scd' : 2, # ionisation coefficients\n    'prb' : 4, # continuum radiation power\n    'plt' : 8, # line radiation power\n    'prc' : 5, # charge-exchange recombination radiation\n    'ecd' : 12 # effective ionisation potential\n}\n\ndatatype_abbrevs = {\n        'ionisation' : 'scd',\n        'recombination' : 'acd',\n        'continuum_power' : 'prb',\n        'line_power' : 'plt',\n        'cx_power' : 'prc',\n        'ionisation_potential' : 'ecd',\n}\n\n# Invert the mapping of datatype_abbrevs\ninv_datatype_abbrevs = {v: k for k, v in datatype_abbrevs.items()}\n\n# Some hard coded parameters to run xxdata_11.for routine.  The values have\n# been take from src/xxdata_11/test.for, and should be OK for all files.\nparameters = {\n    'isdimd' : 200,\n    'iddimd' : 40,\n    'itdimd' : 50,\n    'ndptnl' : 4,\n    'ndptn' : 128,\n    'ndptnc' : 256,\n    'ndcnct' : 100\n}\n\n#<<FORTRAN HELPERS GO IN HERE>>\n\n# Extract information from ret.\niz0, is1min, is1max, nptnl, nptn, nptnc, iptnla, iptna, iptnca, ncnct,\\\nicnctv, iblmx, ismax, dnr_ele, dnr_ams, isppr, ispbr, isstgr, idmax,\\\nitmax, ddens, dtev, drcof, lres, lstan, lptn = ret\n\n# Key to outputs (from xxdata_11.pdf)\n    # type   | name       | description\n    # (i*4)  | iz0        | nuclear charge\n    # (i*4)  | is1min     | minimum ion charge + 1\n    #        |            | (generalised to connection vector index)\n    # (i*4)  | is1max     | maximum ion charge + 1\n    #        |            | (note excludes the bare nucleus)\n    #        |            | (generalised to connection vector index and excludes\n    #        |            | last one which always remains the bare nucleus)\n    # (i*4)  | nptnl      | number of partition levels in block\n    # (i*4)  | nptn()     | number of partitions in partition level\n    #        |            | 1st dim: partition level\n    # (i*4)  | nptnc(,)   | number of components in partition\n    #        |            | 1st dim: partition level\n    #        |            | 2nd dim: member partition in partition level\n    # (i*4)  | iptnla()   | partition level label (0=resolved root,1=\n    #        |            | unresolved root)\n    #        |            | 1st dim: partition level index\n    # (i*4)  | iptna(,)   | partition member label (labelling starts at 0)\n    #        |            | 1st dim: partition level index\n    #        |            | 2nd dim: member partition index in partition level\n    # (i*4)  | iptnca(,,) | component label (labelling starts at 0)\n    #        |            | 1st dim: partition level index\n    #        |            | 2nd dim: member partition index in partition level\n    #        |            | 3rd dim: component index of member partition\n    # (i*4)  | ncnct      | number of elements in connection vector\n    # (i*4)  | icnctv()   | connection vector of number of partitions\n    #        |            | of each superstage in resolved case\n    #        |            | including the bare nucleus\n    #        |            | 1st dim: connection vector index\n    # (i*4)  | iblmx      | number of (sstage, parent, base)\n    #        |            | blocks in isonuclear master file\n    # (i*4)  | ismax      | number of charge states\n    #        |            | in isonuclear master file\n    #        |            | (generalises to number of elements in\n    #        |            |  connection vector)\n    # (c*12) | dnr_ele    | CX donor element name for iclass = 3 or 5\n    #        |            | (blank if unset)\n    # (r*8)  | dnr_ams    | CX donor element mass for iclass = 3 or 5\n    #        |            | (0.0d0 if unset)\n    # (i*4)  | isppr()    | 1st (parent) index for each partition block\n    #        |            | 1st dim: index of (sstage, parent, base)\n    #        |            |          block in isonuclear master file\n    # (i*4)  | ispbr()    | 2nd (base) index for each partition block\n    #        |            | 1st dim: index of (sstage, parent, base)\n    #        |            |          block in isonuclear master file\n    # (i*4)  | isstgr()   | s1 for each resolved data block\n    #        |            | (generalises to connection vector index)\n    #        |            | 1st dim: index of (sstage, parent, base)\n    #        |            |          block in isonuclear master file\n    # (i*4)  | idmax      | number of dens values in\n    #        |            | isonuclear master files\n    # (i*4)  | itmax      | number of temp values in\n    #        |            | isonuclear master files\n    # (r*8)  | ddens()    | log10(electron density(cm-3)) from adf11\n    # (r*8)  | dtev()     | log10(electron temperature (eV) from adf11\n    # (r*8)  | drcof(,,)  | if(iclass <=9):\n    #        |            | \tlog10(coll.-rad. coefft.) from\n    #        |            | \tisonuclear master file\n    #        |            | if(iclass >=10):\n    #        |            | \tcoll.-rad. coefft. from\n    #        |            | \tisonuclear master file\n    #        |            | 1st dim: index of (sstage, parent, base)\n    #        |            | \t\t block in isonuclear master file\n    #        |            | 2nd dim: electron temperature index\n    #        |            | 3rd dim: electron density index\n    # (l*4)  | lres       | = .true. => partial file\n    #        |            | = .false. => not partial file\n    # (l*4)  | lstan      | = .true. => standard file\n    #        |            | = .false. => not standard file\n    # (l*4)  | lptn       | = .true. => partition block present\n    #        |            | = .false. => partition block not present\n\n# Make a new blank dictionary, data_dict\ndata_dict = {}\n# Save data to data_dict\ndata_dict['charge']                  = iz0 #Nuclear charge\ndata_dict['log_density']             = ddens[:idmax]\ndata_dict['log_temperature']         = dtev[:itmax]\ndata_dict['number_of_charge_states'] = ismax\ndata_dict['log_coeff']               = drcof[:ismax, :itmax, :idmax]\n\n# <<READ THESE ATTRIBUTES FROM FILENAME>>\n# data_dict['class'] = 'scd'\n# data_dict['element'] = 'c'\n# data_dict['name'] = '/Users/thomasbody/Dropbox/Thesis/atomic/adas_data/scd96_c.dat'\n\n# convert everything to SI + eV units\ndata_dict['log_density'] += 6 # log(cm^-3) = log(10^6 m^-3) = 6 + log(m^-3)\n# N.b. the ecd (ionisation potential) class is already in eV units.\nif data_dict['class'] != 'ecd':\n    data_dict['log_coeff'] -= 6 # log(m^3/s) = log(10^-6 m^3/s) = -6 + log(m^3/s)\nelse:\n    data_dict['log_coeff'] = np.log10(data_dict['log_coeff'][1:])\n\n# jsonify the numpy arrays\nimport numpy as np\n# copy data to a new dictionary (data_dict_jsonified) and then edit that one\nfrom copy import deepcopy\ndata_dict_jsonified = deepcopy(data_dict)\ndata_dict_jsonified['log_density']     = data_dict_jsonified['log_density'].tolist()\ndata_dict_jsonified['log_temperature'] = data_dict_jsonified['log_temperature'].tolist()\ndata_dict_jsonified['log_coeff']       = data_dict_jsonified['log_coeff'].tolist()\n\n# <<Use original filename, except with .json instead of .dat extension>>\nwith open('data_dict.json','w') as fp:\n\tjson.dump(data_dict_jsonified, fp, sort_keys=True, indent=4)\n\n\n# Full table of ADF11 types (for reference)\n    # class index | type | GCR data content\n    # ------------\\------\\--------------------------------\n    # 1           | acd  | \trecombination coeffts\n    # 2           | scd  | \tionisation coeffts\n    # 3           | ccd  | \tCX recombination coeffts\n    # 4           | prb  | \trecomb/brems power coeffts\n    # 5           | prc  | \tCX power coeffts\n    # 6           | qcd  | \tbase meta. coupl. coeffts\n    # 7           | xcd  | \tparent meta. coupl. coeffts\n    # 8           | plt  | \tlow level line power coeffts\n    # 9           | pls  | \trepresent. line power coefft\n    # 10          | zcd  | \teffective charge\n    # 11          | ycd  | \teffective squared charge\n    # 12          | ecd  | \teffective ionisation potential\n\nif __name__ == '__main__':\n    print('>> build_json.py called')\n    print('\\nConverting .dat files to .json files\\n')\n\n\n\n    print('\\n>> setup_fortran_programs.py exited')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
			"file": "build_json.py",
			"file_size": 8773,
			"file_write_time": 131444336570000000,
			"settings":
			{
				"buffer_size": 9503,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "setup_fortran_programs.py",
			"settings":
			{
				"buffer_size": 2192,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/thomasbody/Dropbox/Thesis/atomic/atomic/atomic_data.py",
			"settings":
			{
				"buffer_size": 11245,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/thomasbody/Dropbox/Thesis/atomic/atomic/adf11.py",
			"settings":
			{
				"buffer_size": 5209,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Markdown Preview/Markdown.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Markdown Preview/Markdown.sublime-build",
					""
				]
			],
			[
				"Packages/Markdown Preview/Markdown.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"preview",
				"Markdown Preview: Preview in Browser"
			],
			[
				"Markdown",
				"Markdown Preview: Preview in Browser"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"print",
				"Print to HTML: print as HTML via browser"
			],
			[
				"delete ",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"comment",
				"Toggle Comment"
			],
			[
				"package control",
				"Package Control: Discover Packages"
			],
			[
				"package control add",
				"Package Control: Advanced Install Package"
			],
			[
				"package control ",
				"Package Control: Add Channel"
			],
			[
				"package control rem",
				"Package Control: Remove Package"
			],
			[
				"Align",
				"Package Control: Install Package"
			],
			[
				"theme",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"sort",
				"Sort Lines (Case Sensitive)"
			],
			[
				"T",
				"Typewriter: Scrolling Mode (Toggle)"
			],
			[
				"typ",
				"Typewriter: Scrolling Mode (Toggle)"
			],
			[
				"",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"type",
				"Typewriter: Scrolling Mode (Toggle)"
			],
			[
				"packa add",
				"Package Control: Add Channel"
			],
			[
				"color",
				"Colorsublime: Install Theme"
			],
			[
				"package co in",
				"Package Control: Install Package"
			],
			[
				"proje",
				"Project: Save As"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"latex",
				"LaTeXTools: Reconfigure and migrate settings"
			],
			[
				"package control: ",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"package control: ins",
				"Package Control: Install Package"
			]
		],
		"width": 629.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/thomasbody/Dropbox/Thesis/atomic1D",
		"/Users/thomasbody/Dropbox/Thesis/atomic1D/src/xxdata_11"
	],
	"file_history":
	[
		"/Users/thomasbody/Dropbox/Thesis/atomic1D/demo_json.py",
		"/Users/thomasbody/Dropbox/Thesis/atomic1D/build_json.py",
		"/Users/thomasbody/Dropbox/Thesis/atomic1D/README.md",
		"/Users/thomasbody/Dropbox/Thesis/atomic1D/data2.json",
		"/Users/thomasbody/Dropbox/Thesis/atomic1D/data.json",
		"/Users/thomasbody/Dropbox/Thesis/atomic/atomic1D/fetch_adas_data.py",
		"/Users/thomasbody/Dropbox/Thesis/atomic/atomic1D/setup_fortran_programs.py",
		"/Users/thomasbody/Dropbox/Thesis/atomic/atomic1D/makefile",
		"/Users/thomasbody/Dropbox/Thesis/atomic/atomic1D/setup.py",
		"/Users/thomasbody/.bash_profile",
		"/Users/thomasbody/Dropbox/Thesis/atomic/atomic1D/adas.py",
		"/Users/thomasbody/Dropbox/Thesis/atomic/fetch_adas_data",
		"/Users/thomasbody/Dropbox/Thesis/atomic/deconstruct/makefile",
		"/Users/thomasbody/Dropbox/Thesis/atomic/atomic1D/README",
		"/Users/thomasbody/Dropbox/Thesis/atomic/deconstruct/make",
		"/Users/thomasbody/Dropbox/Thesis/atomic/examples/radiation.py",
		"/Users/thomasbody/Dropbox/Thesis/atomic/atomic/adf11.py",
		"/Users/thomasbody/Dropbox/Thesis/atomic/examples/epsilon_cooling2.py",
		"/Users/thomasbody/Dropbox/Thesis/atomic/trancfunc.py",
		"/Users/thomasbody/Dropbox/Thesis/atomic/src/xxdata_11/xxdata_11.for",
		"/Users/thomasbody/Dropbox/Thesis/atomic/atomic/__init__.py",
		"/Users/Tom/Dropbox/Masters_Thesis/Misc_code/Ionisation_stages/atomic-master/src/helper_functions.for",
		"/Users/Tom/Dropbox/Masters_Thesis/Misc_code/Ionisation_stages/atomic-master/src/xxdata_11.pyf",
		"/Users/Tom/Dropbox/Masters_Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/adf11.py",
		"/Users/Tom/Dropbox/Masters_Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/adf15.py",
		"/Users/Tom/Dropbox/Masters_Thesis/Misc_code/Ionisation_stages/atomic-master/examples/epsilon_cooling2_callstructure.txt",
		"/Users/Tom/Dropbox/Masters_Thesis/Misc_code/Ionisation_stages/atomic-master/src/xxdata_11/xxdata_11.for",
		"/Users/Tom/Dropbox/Masters_Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/atomic_fullfile.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/src/helper_functions.for",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/epsilon_cooling2.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/adf11.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/time_dependent_rates.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/adf15.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/tests/test_electron_cooling.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/electron_cooling.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/tests/test_collisional_radiative.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/tests/test_atomic_data.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/collisional_radiative_equilibrium.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/ensemble_average.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/atomic_data.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/atomic_data.py.bak",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/collisional_radiative.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/collisional_radiative.py.bak",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/electron_cooling.py.bak",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/pec.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/pec.py.bak",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/radiation.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/radiation.py.bak",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/tests/test_time_dependent_rates.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/time_dependent_rates.py.bak",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/rate_coefficients.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/setup.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/fetch_adas_data",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/adas.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/__init__.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/__init__.py.bak",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/tests/test_adf11.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/tests/test_abundance.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/atomic/tests/test_radiation.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/epsilon_cooling.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/epsilon_cooling.py.bak",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/filter_construction.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/filter_ensemble_average.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/Kallenbach_2016_figure_3.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/Kallenbach_2016_figure_3.py.bak",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/Lz_ne_tau.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/profiles.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/radiation.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/rate_equations.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/examples/rate_equations_diffusion.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master/profileAtomic.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/Data_spec.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/Data_spec.f77",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/Data_spec.f90",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/Computational_techniques(final).py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/ionisation_stages.py",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/ionisation_stages/data/ionelec_szd#c.dat",
		"/Users/Tom/Dropbox/Masters Thesis/Misc_code/ionisation_stages/ionisation_stages.py",
		"/Users/Tom/Downloads/szd93#c_c0.dat",
		"/Users/Tom/Downloads/szd93#c_c1.dat",
		"/Users/Tom/Dropbox/Undergraduate Research/DivNH3_article/LaTeX/DivNH3.tex",
		"/Users/Tom/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/F9F31F32-05D8-4DA7-867D-B39B03E1FABE/Experimental_ne.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/New_scans_plot_all.m",
		"/Users/Tom/SD1D/modified-two-point.py",
		"/Users/Tom/SD1D/README.md",
		"/Users/Tom/BOUT-dev/include/boutmain.hxx",
		"/Users/Tom/Desktop/LaTex_basic.tex",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/OutputPlots/Comp_scan_plot_reactions.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/OutputPlots/Comp_scan_plot_neutrals_nonorm.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/OutputPlots/Comp_scan_plot_ions_nonorm.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/OutputPlots/Power_scan_plot_surface.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/OutputPlots/Power_scan_plot_fractions.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/OutputPlots/Power_scan_plot_ions.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/OutputPlots/Power_scan_plot_neutrals.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/OutputPlots/Comp_scan_plot_ions.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/OutputPlots/Comp_scan_plot_fractions.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/OutputPlots/Comp_scan_plot_surface.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/OutputPlots/Comp_scan_plot_neutrals.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/New_scans_plot_neutrals.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/New_scans_plot_fractions.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/New_scans_plot_surface.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/New_scans_plot_ions.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/README",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/New_scans_plot_neutrals_new_normalisation.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/Run_single_variable_scan.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/New scan/Plotting_single_variable_scan.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/Misc functions/IonicPlotting.m",
		"/Users/Tom/Dropbox/Undergraduate Research/MATLAB/Experiment/Functions/Plot_ScanStruct_Ion.m",
		"/Users/Tom/Dropbox/Thesis/4.Aim/Experimental_aim_and_MAGPIE.tex",
		"/Users/Tom/Dropbox/Thesis/5.PhysicsBasis/Introduction_to_Physics.tex",
		"/Users/Tom/Dropbox/Thesis/5.PhysicsBasis/ThermalEnergyDistributions.tex",
		"/Users/Tom/Dropbox/Thesis/5.PhysicsBasis/Sheaths.tex",
		"/Users/Tom/Dropbox/Thesis/5.PhysicsBasis/Gas_Supply_Pumping.tex",
		"/Users/Tom/Dropbox/Thesis/6.ChemistryBasis/Introduction_to_Chemistry.tex",
		"/Users/Tom/Dropbox/Thesis/6.ChemistryBasis/Utilisation_of_crosssections.tex",
		"/Users/Tom/Dropbox/Thesis/6.ChemistryBasis/HardShellApproximation.tex",
		"/Users/Tom/Dropbox/Thesis/3.Introduction/Physics_of_fusion.tex",
		"/Users/Tom/Dropbox/Thesis/3.Introduction/The_ITER_tokamak.tex",
		"/Users/Tom/Dropbox/Thesis/3.Introduction/Impurity_seeding_for_fusion_devices.tex",
		"/Users/Tom/Dropbox/Thesis/3.Introduction/Ammonia_production_due_to_seeding.tex",
		"/Users/Tom/Dropbox/Thesis/4.Aim/Introduction_to_aim.tex",
		"/Users/Tom/Dropbox/Thesis/4.Aim/Literature_review.tex",
		"/Users/Tom/Dropbox/Thesis/2.Foreword/Foreword.tex",
		"/Users/Tom/Dropbox/MATLAB/Misc functions/Results_Plot_Rates.m",
		"/Users/Tom/Dropbox/MATLAB/Misc functions/Results_Plot_Rates_E.m",
		"/Users/Tom/Desktop/Work for Thesis/MASsoft csv/Functions/Plot_Export2.m",
		"/Users/Tom/Dropbox/MATLAB/Determine_Te_Dependance.m",
		"/Users/Tom/Dropbox/MATLAB/Misc functions/Plot_Export.m"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 132.0,
		"where_history":
		[
			"",
			"/Users/Tom/Dropbox/Masters_Thesis/Misc_code/Ionisation_stages/atomic-master",
			"/Users/Tom/Dropbox/Masters Thesis/Misc_code/Ionisation_stages/atomic-master",
			"",
			"/Users/Tom/Dropbox/MATLAB",
			"/Users/Tom/Dropbox/MATLAB_Unitless",
			"/Users/Tom/Dropbox/MATLAB Back-ups/MATLAB Unitless",
			"/Users/Tom/Dropbox/MATLAB\\ Back-ups/MATLAB\\ Unitless",
			"/Users/Tom/Dropbox/MATLAB",
			"<current file>",
			"/Users/Tom/Dropbox/MATLAB/Classes,/Users/Tom/Dropbox/MATLAB/Crosssections,/Users/Tom/Dropbox/MATLAB/Databases,/Users/Tom/Dropbox/MATLAB/External methods for GUI_control",
			"/Users/Tom/Dropbox/MATLAB/External methods for GUI_control",
			"/Users/Tom/Dropbox/MATLAB",
			"/Users/Tom/Documents/MATLAB/GUI"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"= ",
			"c",
			"C",
			"c",
			"C",
			"c",
			"c ",
			", ",
			"parameters",
			"c ",
			":",
			",",
			"data",
			"data2",
			"data",
			"data2",
			"data",
			"log_density",
			"d",
			"element",
			"adas.",
			"open_adas",
			"adas.",
			"print_function",
			"atomic",
			"parameters",
			"adf11_classes",
			"_sniff_class",
			"element",
			"write",
			"unspecified CX donor element",
			"dlopen(",
			"dlopen(/Users/thomasbody/Dropbox/Thesis/atomic/atomic/_xxdata_11.cpython-36m-darwin.so, 2)",
			"~/",
			"cd ",
			"helper_open_file",
			"no class name given in file",
			"_read_xxdata_11",
			"assertAlmostEqual",
			"test_ionisation_stage_distribution_cold",
			"assertAlmostEqual",
			"xrange",
			".iteritems",
			"urllib.urlretrieve",
			"urllib",
			"print ",
			"from atomic import atomicData",
			"import atomic",
			"xrange",
			"import",
			"iteritems",
			"urllib",
			"import urllib",
			"urllib.urlopen",
			"urllib.urlencode",
			"urllib.urlencode()",
			"HTMLParser",
			"import HTMLParser",
			"print ",
			"elec_temp",
			"rate",
			"+",
			"e+",
			"+",
			"'",
			"FullWidthStyle",
			"../Figures/",
			".png",
			"../Figures/",
			"ColumnWidthStyle",
			".eps",
			"../Figures/",
			".eps",
			"../Figures/",
			"ColumnWidthStyle",
			"figure",
			"reaction",
			"FullWidthStyle",
			"FullWidthStyle.Format = 'png';",
			"reaction",
			"Power_scan_reaction",
			"reaction",
			"figure",
			"surface_figure",
			"fractions_figure",
			"ion_figure",
			"neutral_figure",
			"Composition",
			"neutral",
			"pDe",
			"'H'",
			"Column",
			"fractions",
			"fraction",
			"New_scans",
			"strep",
			"production",
			"(loss_sorting)",
			"(production_sorting)",
			"production",
			"production_keys",
			"max_Rate",
			") ",
			"max_NH3",
			"CAR",
			" ",
			"CAR",
			" ",
			"Neutral_figure",
			" clear(",
			"if Close_after_save",
			"close(",
			"Style",
			"ColumnWidthStyle",
			"_figure",
			"Reaction rate",
			"Dominant",
			"Dominant NH",
			"surface",
			"2",
			"'LineStyle'",
			"'LineStyle','--'",
			"PlotFigure",
			"Scan_values",
			"X",
			"co",
			"Co",
			"co"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"range",
			".items",
			"import atomicData",
			"from atomic import atomic",
			"range",
			"items",
			"urllib.request.urlopen",
			"urllib.parse.urlencode",
			"urllib.parse.urlencode()",
			"Controller.Reaction_I2E",
			"Controller.Species_I2E",
			"[T,Y,R,E,M,Converged]",
			"save('/Users/Tom/Dropbox/MATLAB_Unitless/Databases/",
			"",
			"Controller.Global.ExperimentUpdated",
			"Controller.Solver.ExperimentUpdated",
			"[T,Y,R,M,Converged] = SolveBalanceEquations",
			"Results_SelectTest",
			"Results_SelectIndependentVar",
			"Results_ExportTable",
			"Results_ExportStruct",
			"Results_SaveTestIndex",
			"Results_Plot_HoldDependentVar",
			"Results_Plot_LookupShowPlotElement",
			"Results_Plot_LookupShowDependentVar",
			"GUI_7_DependentVar",
			"Controller.Global.ExperimentUpdated",
			"Controller.Solver.EvaluationStartTime",
			"Controller.Global.ConvergenceCheck_GasSupplyIndex",
			"Controller.Global.ConvergenceCheck_StartingPressureIndex",
			"Controller.Global.ConvergenceCheck_PowerAbsorbedIndex",
			"obj.Global.ConvergenceCheck_GasSupplyIndex",
			"obj.Global.ConvergenceCheck_StartingPressureIndex",
			"obj.Global.ConvergenceCheck_PowerAbsorbedIndex",
			"Evaluation_AxesChange_Callback",
			"Evaluation_Monitor_Callback",
			"Evaluation_Mode_Callback",
			"Evaluation_SaveTestIndex",
			"Init_CheckDB",
			"Global_EvaluationMode",
			"Species_UpdateMode",
			"Species_UpdateListbox",
			"Species_DB_ReturnAttributes",
			"Species_ReturnAttributes",
			"Species_DB_AddElement",
			"evaluate_PowerProduct",
			"Reaction_UpdateMode",
			"Reaction_UpdateListbox",
			"Reaction_DB_ReturnAttributes",
			"Reaction_DB_RemoveElement",
			"Reaction_DB_Query",
			"Reaction_DB_AddElement",
			"Global_UpdateMode",
			"Init_ResetDB_MAIN",
			"Global_CheckMode",
			"Init_CheckDB_MAIN",
			"GasSupply_UpdatePanel",
			"GasSupply_UpdateDictionary",
			"GasSupply_DeleteElement",
			"Evaluation_UpdateMode",
			"Evaluation_PlotSolution_",
			"Evaluation_PlotSolution",
			"Evaluation_MonitorMultiple",
			"Evaluation_SelectTest",
			"Evaluation_CheckConvergence",
			"EvaluateTab_Species",
			"EvaluateTab_Results",
			"EvaluateTab_Reactor",
			"EvaluateTab_Reaction",
			"EvaluateTab_OpenScreen",
			"EvaluateTab_Experiment",
			"EvaluateTab_Evaluation",
			"Evaluate_SelectTest",
			"Update_Evaluate_SelectTest",
			"Save_GUI_6_SelectTest",
			"Update_GUI_6_SelectTest",
			"obj.H.GUI_6_SelectTestPanel",
			"obj.H.GUI_6_SelectTest",
			"obj.H.GUI_6_SelectParameter",
			"EvaluateModeSelection",
			"UpdateInputformMode",
			"CrosssectionBuilder_Make",
			"CheckInputformMode",
			"UpdateInputformMode",
			"UpdateEvaluationMode",
			"ConvergenceCheck",
			"GUI_3",
			"GUI_5",
			"GUI_4",
			"GUI_XX",
			"Controller.H.GUI_XX",
			"ConvergenceParameter",
			"Controller.H.GUI_6_CvgPara",
			"Controller.H.GUI_6_CvgParaString",
			"Avenir Next",
			"Verdana",
			"Controller",
			"GUI",
			"Controller",
			"save('Databases/DB_MAIN'",
			"save('Core/DB_MAIN'",
			"'WindowStyle','Normal'",
			"'WindowStyle','Modal'"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "build_json.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9503,
						"regions":
						{
						},
						"selection":
						[
							[
								2534,
								2534
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 931.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "setup_fortran_programs.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2192,
						"regions":
						{
						},
						"selection":
						[
							[
								2041,
								1988
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 159.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/thomasbody/Dropbox/Thesis/atomic/atomic/atomic_data.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11245,
						"regions":
						{
						},
						"selection":
						[
							[
								3398,
								3398
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1652.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/thomasbody/Dropbox/Thesis/atomic/atomic/adf11.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5209,
						"regions":
						{
						},
						"selection":
						[
							[
								967,
								582
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 270.0
	},
	"output.find_results":
	{
		"height": 669.0
	},
	"output.latextools":
	{
		"height": 136.0
	},
	"output.markdown":
	{
		"height": 160.0
	},
	"pinned_build_system": "",
	"project": "atomic1D.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"GUI_control.m"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Dropbox/MATLAB/MATLAB.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 316.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
